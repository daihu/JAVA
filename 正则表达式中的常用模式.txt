/pattern/  	结果
. 	匹配除换行符以外的所有字符
x? 	匹配 0 次或一次 x 字符串
x* 	匹配 0 次或多次 x 字符串，但匹配可能的最少次数
x+ 	匹配 1 次或多次 x 字符串，但匹配可能的最少次数
.* 	匹配 0 次或一次的任何字符
.+ 	匹配 1 次或多次的任何字符
{m} 	匹配刚好是 m 个 的指定字符串
{m,n} 	匹配在 m个 以上 n个 以下 的指定字符串
{m,} 	匹配 m个 以上 的指定字符串
[] 	匹配符合 [] 内的字符
[^] 	匹配不符合 [] 内的字符
[0-9] 	匹配所有数字字符
[a-z] 	匹配所有小写字母字符
[^0-9] 	匹配所有非数字字符
[^a-z] 	匹配所有非小写字母字符
^ 	匹配字符开头的字符
$ 	匹配字符结尾的字符
\d 	匹配一个数字的字符，和 [0-9] 语法一样
\d+ 	匹配多个数字字符串，和 [0-9]+ 语法一样
\D 	非数字，其他同 \d
\D+ 	非数字，其他同 \d+
\w 	英文字母或数字的字符串，和 [a-zA-Z0-9] 语法一样
\w+ 	和 [a-zA-Z0-9]+ 语法一样
\W 	非英文字母或数字的字符串，和 [^a-zA-Z0-9] 语法一样
\W+ 	和 [^a-zA-Z0-9]+ 语法一样
\s 	空格，和 [\n\t\r\f] 语法一样
\s+ 	和 [\n\t\r\f]+ 一样
\S 	非空格，和 [^\n\t\r\f] 语法一样
\S+ 	和 [^\n\t\r\f]+ 语法一样
\b 	匹配以英文字母,数字为边界的字符串
\B 	匹配不以英文字母,数值为边界的字符串
a|b|c 	匹配符合a字符 或是b字符 或是c字符 的字符串
abc 	匹配含有 abc 的字符串
(pattern) 	() 这个符号会记住所找寻到的字符串，是一个很实用的语法。第一个 () 内所找到的字符串变成 $1 这个变量或是 \1 变量，第二个 () 内所找到的字符串变成 $2 这个变量或是 \2 变量，以此类推下去。
/pattern/i 	i 这个参数表示忽略英文大小写，也就是在匹配字符串的时候，不考虑英文的大小写问题。
\ 	如果要在 pattern 模式中找寻一个特殊字符，如 "*"，则要在这个字符前加上 \ 符号，这样才会让特殊字符失效

下面给出一些例子：   
范例 	说明
/perl/ 	找到含有 perl 的字符串
/^perl/ 	找到开头是 perl 的字符串
/perl$/ 	找到结尾是 perl 的字符串
/c|g|i/ 	找到含有 c 或 g 或 i 的字符串
/cg{2,4}i/ 	找到 c 后面跟着 2个到 4个 g ，再跟着 i 的字符串
/cg{2,}i/ 	找到 c 后面跟着 2个以上 g ，再跟着 i 的字符串
/cg{2}i/ 	找到 c 后面跟着 2个 g，再跟着 i 的字符串
/cg*i/ 	找到 c 后面跟着 0个或多个 g ，再跟着 i 的字符串，如同/cg{0,1}i/
/cg+i/ 	找到 c 后面跟着一个以上 g，再跟着 i 的字符串，如同/cg{1,}i/
/cg?i/ 	找到 c 后面跟着 0个或是 1个 g ，再跟着 i 的字符串，如同/cg{0,1}i/
/c.i/ 	找到 c 后面跟着一个任意字符，再跟着 i 的字符串
/c..i/ 	找到 c 后面跟着二个任意字符，再跟着 i 的字符串
/[cgi]/ 	找到符合有这三个字符任意一个的字符串
/[^cgi]/ 	找到没有这三个字符中任意一个的字符串
/\d/ 	找寻符合数字的字符，可以使用/\d+/来表示一个或是多个数字组成的字符串
/\D/ 	找寻符合不是数字的字符，可以使用/\D+/来表示一个或是更多个非数字组成的字符串
/\*/ 	找寻符合 * 这个字符，因为 * 在常规表达式中有它的特殊意思，所以要在这个特殊符号前加上 \ 符号，这样才会让这个特殊字符失效
/abc/i 	找寻符合 abc 的字符串而且不考虑这些字符串的大小写